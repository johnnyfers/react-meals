{"ast":null,"code":"var _jsxFileName = \"/home/acer/\\xC1rea de Trabalho/food-order-app/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    default:\n      return defaultCartState;\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCarHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCarHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCarHandler,\n    removeItem: removeItemFromCarHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/acer/Área de Trabalho/food-order-app/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCarHandler","removeItemFromCarHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,YAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,YAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,aAAO;AACHX,QAAAA,KAAK,EAAEM,YADJ;AAEHL,QAAAA,WAAW,EAAEQ;AAFV,OAAP;;AAIJ;AACI,aAAOV,gBAAP;AATR;AAWH,CAZD;;AAcA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,mBAAmB,GAAIR,IAAD,IAAU;AAClCO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,wBAAwB,GAAIC,EAAD,IAAQ;AACrCH,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AAEH,GAHD;;AAKA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,mBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;GAAMV,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react'\n\nimport CartContext from './Cart-context'\n\nconst defaultCartState = { items: [], totalAmount: 0 }\n\nconst cartReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD':\n            const updatedItems = state.items.concat(action.item)\n            const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n            return {\n                items: updatedItems,\n                totalAmount: updatedTotalAmount\n            }\n        default:\n            return defaultCartState\n    }\n}\n\nconst CartProvider = (props) => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n    const addItemToCarHandler = (item) => {\n        dispatchCartAction({ type: 'ADD', item: item })\n    }\n\n    const removeItemFromCarHandler = (id) => {\n        dispatchCartAction({ type: 'REMOVE', id: id })\n\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCarHandler,\n        removeItem: removeItemFromCarHandler\n    }\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}